import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, e as element, a as space, t as text, c as claim_element, b as children, g as detach_dev, h as claim_space, f as claim_text, j as attr_dev, l as add_location, m as insert_dev, o as append_dev, B as set_data_dev, n as noop, q as create_component, r as claim_component, u as mount_component, x as transition_in, y as transition_out, z as destroy_component } from './index.26f5828f.js';

/* src/components/Card.svelte generated by Svelte v3.16.0 */

const file = "src/components/Card.svelte";

function create_fragment(ctx) {
	let div3;
	let div2;
	let div0;
	let img;
	let img_src_value;
	let t0;
	let div1;
	let h1;
	let t1_value = /*props*/ ctx[0].title + "";
	let t1;
	let t2;
	let p;
	let t3_value = /*props*/ ctx[0].author + "";
	let t3;

	const block = {
		c: function create() {
			div3 = element("div");
			div2 = element("div");
			div0 = element("div");
			img = element("img");
			t0 = space();
			div1 = element("div");
			h1 = element("h1");
			t1 = text(t1_value);
			t2 = space();
			p = element("p");
			t3 = text(t3_value);
			this.h();
		},
		l: function claim(nodes) {
			div3 = claim_element(nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			img = claim_element(div0_nodes, "IMG", { src: true, alt: true, class: true });
			div0_nodes.forEach(detach_dev);
			t0 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			h1 = claim_element(div1_nodes, "H1", {});
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, t1_value);
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(div1_nodes);
			p = claim_element(div1_nodes, "P", {});
			var p_nodes = children(p);
			t3 = claim_text(p_nodes, t3_value);
			p_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*props*/ ctx[0].img)) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "Avatar");
			attr_dev(img, "class", "svelte-2o4rhv");
			add_location(img, file, 58, 6, 1054);
			attr_dev(div0, "class", "flip-card-front svelte-2o4rhv");
			add_location(div0, file, 57, 4, 1018);
			add_location(h1, file, 61, 6, 1140);
			add_location(p, file, 62, 6, 1169);
			attr_dev(div1, "class", "flip-card-back svelte-2o4rhv");
			add_location(div1, file, 60, 4, 1105);
			attr_dev(div2, "class", "flip-card-inner svelte-2o4rhv");
			add_location(div2, file, 56, 2, 984);
			attr_dev(div3, "class", "flip-card svelte-2o4rhv");
			add_location(div3, file, 55, 0, 958);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div3, anchor);
			append_dev(div3, div2);
			append_dev(div2, div0);
			append_dev(div0, img);
			append_dev(div2, t0);
			append_dev(div2, div1);
			append_dev(div1, h1);
			append_dev(h1, t1);
			append_dev(div1, t2);
			append_dev(div1, p);
			append_dev(p, t3);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*props*/ 1 && img.src !== (img_src_value = /*props*/ ctx[0].img)) {
				attr_dev(img, "src", img_src_value);
			}

			if (dirty & /*props*/ 1 && t1_value !== (t1_value = /*props*/ ctx[0].title + "")) set_data_dev(t1, t1_value);
			if (dirty & /*props*/ 1 && t3_value !== (t3_value = /*props*/ ctx[0].author + "")) set_data_dev(t3, t3_value);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div3);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { props = {
		img: "books/alittlelife.jpg",
		title: "A Little Life",
		author: "Hanya Yanagihara",
		age: "4",
		year: "2016"
	} } = $$props;

	const writable_props = ["props"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Card> was created with unknown prop '${key}'`);
	});

	$$self.$set = $$props => {
		if ("props" in $$props) $$invalidate(0, props = $$props.props);
	};

	$$self.$capture_state = () => {
		return { props };
	};

	$$self.$inject_state = $$props => {
		if ("props" in $$props) $$invalidate(0, props = $$props.props);
	};

	return [props];
}

class Card extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { props: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Card",
			options,
			id: create_fragment.name
		});
	}

	get props() {
		throw new Error("<Card>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set props(value) {
		throw new Error("<Card>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/routes/books.svelte generated by Svelte v3.16.0 */

function create_fragment$1(ctx) {
	let t;
	let current;
	const card = new Card({ $$inline: true });

	const block = {
		c: function create() {
			t = space();
			create_component(card.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			t = claim_space(nodes);
			claim_component(card.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			document.title = "About";
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
			mount_component(card, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(card.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(card.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
			destroy_component(card, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

class Books extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment$1, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Books",
			options,
			id: create_fragment$1.name
		});
	}
}

export default Books;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9va3MuNzQyMGE5MmMuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NhcmQuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG4gIGV4cG9ydCBsZXQgcHJvcHMgPSB7XG4gICAgaW1nOiAnYm9va3MvYWxpdHRsZWxpZmUuanBnJyxcbiAgICB0aXRsZTogJ0EgTGl0dGxlIExpZmUnLFxuICAgIGF1dGhvcjogJ0hhbnlhIFlhbmFnaWhhcmEnLFxuICAgIGFnZTogJzQnLFxuICAgIHllYXI6ICcyMDE2JyxcbiAgfVxuPC9zY3JpcHQ+XG5cbjxzdHlsZT5cbiAgLmZsaXAtY2FyZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgd2lkdGg6IDIwMHB4O1xuICAgIGhlaWdodDogMjAwcHg7XG4gICAgcGVyc3BlY3RpdmU6IDEwMDBweDsgLyogUmVtb3ZlIHRoaXMgaWYgeW91IGRvbid0IHdhbnQgdGhlIDNEIGVmZmVjdCAqL1xuICB9XG5cbiAgLmZsaXAtY2FyZC1pbm5lciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuOHM7XG4gICAgdHJhbnNmb3JtLXN0eWxlOiBwcmVzZXJ2ZS0zZDtcbiAgfVxuXG4gIC5mbGlwLWNhcmQ6aG92ZXIgLmZsaXAtY2FyZC1pbm5lciB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGVZKDE4MGRlZyk7XG4gIH1cblxuICAuZmxpcC1jYXJkLWZyb250LCAuZmxpcC1jYXJkLWJhY2sge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICB9XG5cbiAgLmZsaXAtY2FyZC1mcm9udCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2JiYjtcbiAgICBjb2xvcjogYmxhY2s7XG4gIH1cblxuICAuZmxpcC1jYXJkLWJhY2sge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGRvZGdlcmJsdWU7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHRyYW5zZm9ybTogcm90YXRlWSgxODBkZWcpO1xuICB9XG5cbiAgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gIH1cbjwvc3R5bGU+XG5cblxuPGRpdiBjbGFzcz1cImZsaXAtY2FyZFwiPlxuICA8ZGl2IGNsYXNzPVwiZmxpcC1jYXJkLWlubmVyXCI+XG4gICAgPGRpdiBjbGFzcz1cImZsaXAtY2FyZC1mcm9udFwiPlxuICAgICAgPGltZyBzcmM9e3Byb3BzLmltZ30gYWx0PVwiQXZhdGFyXCIgPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJmbGlwLWNhcmQtYmFja1wiPlxuICAgICAgPGgxPntwcm9wcy50aXRsZX08L2gxPlxuICAgICAgPHA+e3Byb3BzLmF1dGhvcn08L3A+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9kaXY+Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OzswQkE2RFcsR0FBSyxJQUFDLEtBQUs7Ozs7MEJBQ1osR0FBSyxJQUFDLE1BQU07Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs4Q0FKTixHQUFLLElBQUMsR0FBRzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7cUVBQVQsR0FBSyxJQUFDLEdBQUc7Ozs7aUVBR2QsR0FBSyxJQUFDLEtBQUs7aUVBQ1osR0FBSyxJQUFDLE1BQU07Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztPQTdEVCxLQUFLO0VBQ2QsR0FBRyxFQUFFLHVCQUF1QjtFQUM1QixLQUFLLEVBQUUsZUFBZTtFQUN0QixNQUFNLEVBQUUsa0JBQWtCO0VBQzFCLEdBQUcsRUFBRSxHQUFHO0VBQ1IsSUFBSSxFQUFFLE1BQU07Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
